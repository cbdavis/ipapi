% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/ipapi.R
\name{geolocate}
\alias{geolocate}
\title{Geolocate an IP address (v4 o4 v6) or domain name via \url{ip-api.com} API}
\usage{
geolocate(entities, .progress = TRUE)
}
\arguments{
\item{.progress}{show a progress bar? (useful if geolocating many entities)}

\item{entites}{character vector of items to geolocate}
}
\value{
\code{data.table} of responses
}
\description{
Given a character vector of IP addresses (v4 or v6) and/or domain names,
this function will return a \code{data.table} of geolocated values with
the columns mapped to the \code{ip-api.com}'s successful response fields
(see: \url{http://ip-api.com/docs/api:returned_values} for more info).
}
\details{
A small delay is introducted to each geolocation call to help avoid having
your IP address being banned by the \code{ip-api.com} servers.

If there is an error in the \code{http} transaction, a warning will be
generated and the lookup response will be populated with \code{NA}s.
Similarly, if there is a geocoding failure, the response for that query will
also be populated with \code{NA}s
}
\examples{
\dontrun{
resp <- geolocate(c(NA, "10.0.1.1", "", "72.33.67.89", "dds.ec", " ",
                        "search.twitter.com"))
resp[,c(9,4,7,8),with=F]
           query countryCode       lon                             org
## 1: 50.252.233.22          US  -69.9739                   Comcast Cable
## 2:      10.0.1.1          NA        NA                              NA
## 3: 50.252.233.22          US  -69.9739                   Comcast Cable
## 4:   72.33.67.89          US  -89.4012 University of Wisconsin Madison
## 5: 162.243.111.4          US  -73.9865                   Digital Ocean
## 6: 50.252.233.22          US  -69.9739                   Comcast Cable
## 7: 199.59.148.11          US -122.3933                         Twitter
}
}

